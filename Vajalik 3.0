#!/usr/bin/env python3

import rclpy
from rclpy.node import Node
import time
import serial
from sensor_msgs.msg import LaserScan

arduino = serial.Serial(port='/dev/ttyACM0', baudrate=115200, timeout=1)


def send_to_arduino(data):
    arduino.write(data.encode())
    time.sleep(0.05)

def read_arduino():
    info = arduino.readline()
    if info:
        info = info.decode()
        print("Received: ", info)
    else:
        print("No info received\n")

class ScanSubscriber(Node):

    def __init__(self):
        super().__init__('scan_subscriber')
        self.subscription = self.create_subscription(
            LaserScan,
            '/scan',
            self.scan_callback,
            10)
        self.subscription  # prevent unused variable warning

    def scan_callback(self, scan_msg):
        ranges = scan_msg.ranges

        # Extract a specific range of data
        start_mid = 100
        end_mid = 128
        extracted_data = ranges[start_mid:end_mid]

        # Find the minimum value in the extracted data
        min_distance = min(extracted_data)

        # Determine action based on the minimum value
        if min_distance < 1:
            no = '1'
        else:
            no = '0'

        send_to_arduino(no)
        read_arduino()


def main(args=None):
    rclpy.init(args=args)

    scan_subscriber = ScanSubscriber()

    rclpy.spin(scan_subscriber)

    scan_subscriber.destroy_node()
    rclpy.shutdown()


if __name__ == '__main__':
    main()
