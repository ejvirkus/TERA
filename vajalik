import rclpy
from rclpy.node import Node
from sensor_msgs.msg import NavSatFix
import folium
import webbrowser

class GPSPlotterNode(Node):
    def __init__(self):
        super().__init__('gps_plotter_node')
        self.subscription = self.create_subscription(
            NavSatFix,
            'gps_data_tera',
            self.gps_callback,
            10)
        self.subscription  # prevent unused variable warning

        self.map = folium.Map(location=[0, 0], zoom_start=2)  # Initialize map

    def gps_callback(self, msg):
        latitude = msg.latitude
        longitude = msg.longitude

        # Clear previous markers
        self.map = folium.Map(location=[latitude, longitude], zoom_start=15)
        
        # Add new marker for current GPS location
        folium.Marker([latitude, longitude], popup='Current Location').add_to(self.map)

        # Save the map to an HTML file
        map_file_path = 'gps_map.html'
        self.map.save(map_file_path)

        # Open the HTML file in the default web browser
        webbrowser.open(map_file_path)


def main(args=None):
    rclpy.init(args=args)

    gps_plotter = GPSPlotterNode()

    rclpy.spin(gps_plotter)

    gps_plotter.destroy_node()
    rclpy.shutdown()


if __name__ == '__main__':
    main()
